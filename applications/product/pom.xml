<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<project>
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.apache.ofbiz</groupId>
    <artifactId>ofbiz-component</artifactId>
    <version>TRUNK</version>
    <relativePath>../../ofbiz-component-pom.xml</relativePath>
  </parent>
  <artifactId>ofbiz-product</artifactId>
  <name>OFBiz - Product Component</name>
  <description>Product Component</description>
  <properties>
    <product:sun.comm:serial-phase>-undefined</product:sun.comm:serial-phase>
    <product:sun.browser:plugin-phase>-undefined</product:sun.browser:plugin-phase>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ofbiz-base</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ofbiz-entity</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ofbiz-security</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ofbiz-service</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ofbiz-common</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ofbiz-content</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ofbiz-party</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>ofbiz-webapp</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>apache-oro</groupId>
      <artifactId>oro</artifactId>
    </dependency>
    <dependency>
      <groupId>apache-poi</groupId>
      <artifactId>poi</artifactId>
    </dependency>
    <dependency>
      <groupId>apache-tomcat</groupId>
      <artifactId>catalina</artifactId>
    </dependency>
    <dependency>
      <groupId>apache-tomcat</groupId>
      <artifactId>jasper</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>freemarker</groupId>
      <artifactId>freemarker</artifactId>
    </dependency>
    <dependency>
      <groupId>icu4j</groupId>
      <artifactId>icu4j</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>jdom</groupId>
      <artifactId>jdom</artifactId>
    </dependency>
    <dependency>
      <groupId>watermarker</groupId>
      <artifactId>watermarker</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <executions>
          <execution>
            <id>default-compile</id>
            <configuration>
              <excludes>
                <exclude>**/test/*.java</exclude>
                <exclude>**/ShipmentScaleApplet.java</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
           <exclude>**/org/ofbiz/product/test/**</exclude>
           <exclude>**/org/ofbiz/shipment/test/**</exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- the following 3 profiles need to be explained.  The first two
         are fairly standard; detect a file, set a property to an
         empty value, add a dependency.

         However, if the either 2 profiles are *not* auto-activated,
         then these properties will have the value set above at the
         top of this file.  Then, when the <phase> is expanded on the
         compiler plugin, it will evaluate to something like
         "compile-undefined-undefined".  Since this is not a standard
         phase, the plugin will not be executed.

         When both of the first 2 profiles are active, however, then
         both properties are set to the empty value, and the phase is
         evaluated as "compile".  The plugin will then be executed.

         All this, to support conditional compilation when using 2
         conditions.
    -->
    <profile>
      <id>product:sun.comm:serial</id>
      <activation>
        <file>
          <exists>${user.dir}/applications/product/lib/comm.jar</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>sun.comm</groupId>
          <artifactId>serial</artifactId>
        </dependency>
      </dependencies>
      <properties>
        <product:sun.comm:serial-phase></product:sun.comm:serial-phase>
      </properties>
    </profile>
    <profile>
      <id>product:sun.browser:plugin</id>
      <activation>
        <file>
          <exists>${user.dir}/framework/base/lib/plugin.jar</exists>
        </file>
      </activation>
      <dependencies>
        <dependency>
          <groupId>sun.browser</groupId>
          <artifactId>plugin</artifactId>
        </dependency>
      </dependencies>
      <properties>
        <product:sun.browser:plugin-phase></product:sun.browser:plugin-phase>
      </properties>
    </profile>
    <profile>
      <id>product:ShipmentScaleApplet</id>
      <activation>
        <file>
          <exists>pom.xml</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>product-ShipmentScaleApplet-compile</id>
                <phase>compile${product:sun.comm:serial-phase}${product:sun.browser:plugin-phase}</phase>
                <goals>
                  <goal>compile</goal>
                </goals>
                <configuration>
                  <includes>
                    <include>**/ShipmentScaleApplet.java</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
