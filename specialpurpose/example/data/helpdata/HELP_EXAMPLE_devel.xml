<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements. See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to you under the Apache License, Version
2.0 (the "License"); you may not use this file except in compliance
with the License. You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0 Unless required by
applicable law or agreed to in writing, software distributed under the
License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.
-->
<section xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    version="5.0" xmlns:xl="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
    xsi:schemaLocation="http://docbook.org/ns/docbook"
    xmlns="http://docbook.org/ns/docbook">
    <title>Practices of development</title>

    <para>The use of portal pages and of portlets to define the user interfaces is heavily recommended.</para>

    <para>A portal page contains generic or specific portlets, which configurations can completely be changed: title, page arrangement, menus, scripts, ...</para>

    <para>A group of templates has been defined in order to meet the most standard needs during the development of the interfaces.</para>

    <para>Thus, all you have to do, for most of cases, is to define a "Form" at the right place, in the right file. Then, the portlet is straight usable.</para>

    <para>This part aims to describe the tools and recommendations that you have in order to create standard interfaces which configurations can be changed as soon as possible.</para>

    <section>
      <title>Creation of portal pages and portlets</title>

      <para>First, you have to identify the type of portlet.</para>

      <para>Go, in the index, to "Use of Portlets" - "Types of portlets", or straight to <link>Types of portlets</link></para>

      <para>Once you have chosen the template, you have to configure the portlet according to the needs of your screen.
        <itemizedlist>
          <listitem><para>configuration of the portlet's title</para> </listitem>
          <listitem><para>configuration of the screen or of the "Form" that is used</para></listitem>
          <listitem><para>use of a script before the loading of the portlet (recovery of a list, data test, various actions)</para> </listitem>
          <listitem><para>use of a menu (at the top of the title bar of the screenlet)</para> </listitem>
          <listitem><para>use of a test on a variable in order to, or not to, display the contents of the portlet</para></listitem>
          <listitem><para>...</para></listitem>
        </itemizedlist>
      </para>
      <para>&amp;nbsp;</para>
      <para>Most part of the elements which configurations can be changed, on a portlet, have default values that avoid having to define them during the creation of the portlets.</para>

      <para>Thus, when you look at the file ExamplePortletData.xml that defines the portlets, very few fields (mainly the ones regarding the portlet itself) are filled in.
        <itemizedlist>
          <listitem><para>configuration of the portlet's title</para> </listitem>
          <listitem><para>configuration of the screen or of the "Form" that is used</para></listitem>
          <listitem><para>use of a script before the loading of the portlet (recovery of a list, data test, various actions)</para> </listitem>
          <listitem><para>use of a menu (at the top of the title bar of the screenlet)</para> </listitem>
          <listitem><para>use of a test on a variable in order to, or not to, display the contents of the portlet</para></listitem>
          <listitem><para>...</para></listitem>
        </itemizedlist>
      </para>
      <para>And here are some extracts:
        <programlisting>
          &amp;lt;PortalPortlet portalPortletId="FindExample"
             portletName="Find Example (with portletType and showPortlet)" description="portlet to define search criteria for Example list"
             portletTypeId="Screenlet"  component="example" subComponent="Example" helpName="HELP_Screenlet"/>
          &amp;lt;PortalPortlet portalPortletId="ListExample"
             portletName="List Examples (with portletType and showPortlet)" description="portlet to list example depending on search criteria, this portlet is call by FindExample"
             portletTypeId="ScreenletList" component="example" subComponent="Example" helpName="HELP_ScreenletList"/>
        </programlisting>
      </para>
    </section>

    <section>
      <title>Naming rules</title>
      <para>In order to make the comprehension of the names of the portal pages and of the portlets easier, naming conventions have been established:
        <itemizedlist>
          <listitem><para>Portal page:
            <itemizedlist>
              <listitem><para>xxxxSummary: it contains a group of portlets to display and/or to manage an object and its associated entities (pages like Actor Profile or Project Summary, for example). <link xl:href="showHelp?helpTopic=HELP_PPAGE_RECAP">For more details</link></para></listitem>
              <listitem><para>xxxxMgmt: it enables to do a search, to get a list, and, after the selection of an element, to display/manage associated entities by associated entities</para></listitem>
              <listitem><para>sub...: it is a page used as part of a screen</para></listitem>
            </itemizedlist></para>
          </listitem>
          <listitem><para>Portlet:
            <itemizedlist>
              <listitem><para>Findxxxs: search form</para></listitem>
              <listitem><para>Listxxxs: portlet that lists the record of the entity, often as result of the portlet Findxxxs</para></listitem>
              <listitem><para>xxxRecap: small or medium portlet, only on display, meant to be in a column (25% or 33%) in order to remind the object on which you are working</para></listitem>
              <listitem><para>xxxDetailsMenu: same contents as in xxxSummary, with a menu enabling to display the details of associated entities somewhere else on the screen</para></listitem>
              <listitem><para>xxxDetail: empty portlet that enables to define the slot (the container) where the details of associated entities will be displayed (see xxxMenuDetail)</para></listitem>
              <listitem><para>xxxOverview: medium or big portlet, only on display, meant to be in the main column (50% and more) which presents a general view of the object, if needed from elements of associated entities (synthesis of a Project, Command)</para></listitem>
              <listitem><para>xxxCreate: creation portlet. Can contain fields linked to associated entities in order to enable to create the object and the associated entities in only one operation. There can be a similarity of form with xxxOverview</para></listitem>
              <listitem><para>xxxUpdate: update portlet. Only contains fields linked to the object. The update of the associated entities is done via the suitable portlets</para></listitem>
              <listitem><para>xxxyyyys or xxxyyyysList: xxx is the name of the major entity (the object); yyyy is the name of the associated entity; the s shows that it is a list</para></listitem>
            </itemizedlist></para>
          </listitem>
        </itemizedlist>
      </para>
    </section>

    <section>
      <title>Migration of a standard screen</title>
      <para>For the migration of an ofbiz standard screen in a portlet, the projective is to use at the maximum:
        <orderedlist>
          <listitem><para>the elements of the ofbiz standard</para></listitem>
          <listitem><para>the available tools, thanks to the addon portletWidget.</para></listitem>
        </orderedlist>
      </para>
    </section>

    <section>
      <title>Rules to follow:</title>
      <para>
        
        <orderedlist>
          <listitem><para>If you have any doubt, watch how the portlets' parameters are defined in Example (/ofbiz/framework/data/ExamplePortletData/xml). This corresponds to good practices (a good practice that is not in Example is not a good practice)</para></listitem>
          <listitem><para>except in very special situations, files' name and location (form, menu, script, screen) should use default values.</para></listitem>
          <listitem><para>except in very special situations, a portlet should have a portletType (Screenlet, ScreenletList, Decorator or Empty)</para></listitem>
          <listitem><para>field component, sub-component and webapp must be correclty filled in, webap can be empty</para></listitem>
          <listitem><para>choose the correct component for the portlet. A portlet coming from a form in projectmgr but which uses workeffort items without projectmgr personalisation
            should be defined in WorkEffort with component = "WorkEffort" (ex: WorkEffortNotes). It's possible to override a uiLabel in a component, so a specifics title is not a correct reason.
            If a form drop-down is defined with constraints (parentType = xxx, xxxType= , ...), it's easly resolved by defining and using a portlet attribute.</para></listitem>
          <listitem><para>except in very special situations, the screenlet title should use an existing label. You must search twice before creating a new one, and if you create it, you must put it in the right component</para></listitem>
          <listitem><para>if possible, use only one form. If possible, extend the standard (which is used by screen) Form, and override only link fields (edit, remove) by show-portlets, and add an on-event-update-area if a submit button exists</para></listitem>
          <listitem><para>update and create targets must have to use a return json, so as to have a display of error (or success) messages. </para></listitem>
          <listitem><para>edition actions (in the editArea area) should be uri, and not portlets (except if EditXXX is used directly as a portlet in an other PortalPage); to be clearer, put screen and form in same place as the portlets that use them.</para></listitem>
          <listitem><para>currently, for edit actions (or create in sub-list), a "cancel" button or a "refresh" button should exist.</para></listitem>
          <listitem><para>the json uri (and the edit uri) should be put in portlet-controllers, with ofbiz best practice presentation (request without service call in only one line, ...)</para></listitem>
          <listitem><para>if possible, use a portlet (mini-lang) script rather than a screen. If the script is a copy from an action screen section, add a comment; Use a script only if it is used in more than one portlet or screen or if the result is used in the menu or title of the screenlet. Otherwise it's better to put it in the action section of the Form.</para></listitem>
          <listitem><para>any part of the spread code (form, screen, menu, script, java) must own a comment to indicate the origin of the copy and the justification of the copy (think about the one who will need to delete the copy)</para></listitem>
          <listitem><para>every link to another page (in other components, for example) should be moved to a showPortalPage with portalPageId as a portlet attribute, most of the time it should be xxxxRecap; Of course the editForm should define correctly.</para></listitem>
          <listitem><para>in every portlet editForm, field's names and tooltips should be very explicit; all attributes should have a default value (portlet should be usable without adding any attribute)</para></listitem>
          <listitem><para>most of the time, you should add 2 portal pages (xxxMgmt and xxxRecap). Update it each time you add a new portlet</para></listitem>
          <listitem><para>when it's possible, use icons, and not text for menu. To do that, you should :
             <itemizedlist>
              <listitem><para>search the correct icon in the "Icon list" Page, and therefore find the icon's logical name</para></listitem>
              <listitem><para>give the image-location by using the iconsPurpose map</para></listitem>
              <listitem><para>if the icon default tooltips (you can see it in the "Icon List" page) is clear in your case, use it via the IconsTooltips_ labels, otherwise use a specific image-title uiLabel.</para></listitem>
             </itemizedlist></para></listitem>
        </orderedlist>
      </para>
    </section>

    <section>
      <title>more help</title>
      <para>
        For further information, (Portal page type, portlet type), click on the "index" button and go to Example / Development Tree.
      </para>
    </section>
</section>
