<section xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    version="5.0" xmlns:xl="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
    xsi:schemaLocation="http://docbook.org/ns/docbook"
    xmlns="http://docbook.org/ns/docbook">
    <title>Pratiques de développement</title>
    <para>L'usage des pages portails et des portlets pour définir les interfaces utilisateurs est grandement recommandé.</para>
    <para>Une page portail contient des portelts génériques ou spécifiques, et ces portlets sont entièrement configurables : 
        titre, disposition sur la page, menus, script,...
    </para>
    <para>Un ensemble de types de portlet a été défini pour répondre aux besoins les plus classiques lors du développement des interfaces.</para>
    <para>Ainsi dans la plupart des cas, il suffit de définir un "Form" au bon endroit, dans le bon fichier, et la portlet est directement utilisable.</para>
    <para> Cette partie a pour but de décrire les outils et les recommandations à disposition pour réaliser des interfaces standards et configurables dans les meilleurs délais.</para>

    <section>
      <title>Création de page portail et portlets</title>

      <para>Il faut d'abord identifier le type de portlet.</para>
      <para>   Voir dans l'index Utilisation des portlets - Types de portlets ou directement 
       <link xl:href="showHelp?helpTopic=HELP_portlettypes">Types de portlets</link></para>
      <para>
        Une fois son type sélectionné, il va falloir configurer la portlet en fonction des besoins de votre écran :
        <itemizedlist>
          <listitem><para>configuration du titre de la portlet</para> </listitem>
          <listitem><para>configuration du screen ou du form utilisé</para></listitem>
          <listitem><para>utilisation d'un script avant le chargement de la portlet (récupération d'une liste, test de données, actions diverses)</para> </listitem>
          <listitem><para>utilisation d'un menu (en haut dans la barre de titre du screenlet)</para> </listitem>
          <listitem><para>utilisation d'un test sur une variable pour afficher ou non le contenu de la portlet</para></listitem>
          <listitem><para>...</para></listitem>
        </itemizedlist>
      </para>
      <para>&amp;nbsp;</para>
      <para>La majorité des éléments configurables sur une portlet ont des valeurs par défaut qui évitent d'avoir à les définir lors de la création des portlets.</para>
      <para>Ainsi, lorsqu'on regarde le fichier de définition des portlets ExamplePortletData.xml, très peu de champs sont renseignés, principalement ceux concernant la portlet elle-même.
        <itemizedlist>
          <listitem><para>configuration du titre de la portlet</para> </listitem>
          <listitem><para>configuration du screen ou du form utilisé</para></listitem>
          <listitem><para>utilisation d'un script avant le chargement de la portlet (récupération d'une liste, test de données, actions diverses)</para> </listitem>
          <listitem><para>utilisation d'un menu (en haut dans la barre de titre du screenlet)</para> </listitem>
          <listitem><para>utilisation d'un test sur une variable pour afficher ou non le contenu de la portlet</para></listitem>
          <listitem><para>...</para></listitem>
        </itemizedlist>
      </para>
      <para>Et voici des extraits :
        <programlisting>
          &amp;lt;PortalPortlet portalPortletId="FindExample"
             portletName="Find Example (with portletType and showPortlet)" description="portlet to define search criteria for Example list"
             portletTypeId="Screenlet"  component="example" subComponent="Example" helpName="HELP_Screenlet"/>
          &amp;lt;PortalPortlet portalPortletId="ListExample"
             portletName="List Examples (with portletType and showPortlet)" description="portlet to list example depending on search criteria, this portlet is call by FindExample"
             portletTypeId="ScreenletList" component="example" subComponent="Example" helpName="HELP_ScreenletList"/>
        </programlisting>
      </para>
    </section>

    <section>
      <title>Règle de nommage</title>
      <para>
        Afin de faciliter la compréhension des noms de page portail et noms de portlet, des conventions de nommage ont été établies :
        <itemizedlist>
          <listitem><para>Page portail :
            <itemizedlist>
              <listitem><para>xxxxRecap : elle contient un ensemble de portlets pour visualiser et/ou gérer un objet et ses entités associées 
                (les pages profil d'acteur ou Résumé Projet sont de ce type), plus de <link xl:href="showHelp?helpTopic=HELP_PPAGE_RECAP">détails</link></para></listitem>
              <listitem><para>xxxxMgmt : elle permet de faire une recherche, d'obtenir une liste puis aprés sélection d'un élément de visualiser/gérer entités associées par entités associées</para></listitem>
              <listitem><para>sub... : c'est une page qui est utilisée en tant que partie d'écran</para></listitem>
            </itemizedlist></para>
          </listitem>
          <listitem><para>Portlet :
            <itemizedlist>
              <listitem><para>Findxxxs : formulaire de recherche</para></listitem>
              <listitem><para>Listxxxs : portlet listant l'enregistrement de l'entité, souvent en tant que résultat de la portlet Findxxxs</para></listitem>
              <listitem><para>xxxSummary : portlet de petite ou moyenne taille uniquement en affichage, destinée à être dans une colonne (25% ou 33%) pour rappeler l'objet sur lequel on travaille</para></listitem>
              <listitem><para>xxxDetailsMenu : contenu identique à xxxSummary avec un menu permettant d'afficher dans un autre emplacement de l'écran le détail d'entités associés</para></listitem>
              <listitem><para>xxxDetail : portlet vide permettant de définir l'emplacement (le container) où s'affiche le détail d'entités associés (cf xxxMenuDetail)</para></listitem>
              <listitem><para>xxxOverview : portlet de moyenne à grande taille, uniquement en affichage, destinée à être dans la colonne principale (50% et plus) qui présente une vue générale de l'objet, au besoin à partir d'éléments d'entités associées (synthèse Projet, Commande)</para></listitem>
              <listitem><para>xxxCreate : portlet de création, peut contenir des champs liés à des entités associées afin de permettre de créer l'objet et les entités associées en une seule opération. Il peut y avoir similitude de formulaire HTML (form) avec xxxOverview</para></listitem>
              <listitem><para>xxxUpdate : portlet de mise à jour, ne contient que des champs liés à l'objet, la mise à jour des entités associés se fait via les portlets adéquates</para></listitem>
              <listitem><para>xxxyyyys ou xxxyyyysList : xxx c'est le nom de l'entité majeure (l'objet) yyyy le nom de l'entité associée, le s pour signaler que c'est une liste</para></listitem>
            </itemizedlist></para>
          </listitem>
        </itemizedlist>
      </para>
    </section>

    <section>
      <title>Migration d'écran standard</title>
      <para>
        Pour la migration d'écran standard ofbiz en portlet, l'objectif est d'utiliser au maximum :
        <orderedlist>
          <listitem><para>les éléments du standard ofbiz</para></listitem>
          <listitem><para>Des portlet avec le minimum de champ définis donc avec l'usage du maximum de champ avec leur valeur par défaut.</para></listitem>
        </orderedlist>
      </para>
    </section>

    <section>
      <title>Règles à suivre :</title>
      <para>
        
        <orderedlist>
          <listitem><para>en cas de doute, regarder comment sont paramétrés les portlet dans l'exemple (/ofbiz/specialpurpose/example/data/ExamplePortletData.xml), 
                          cela correspond aux bonnes pratiques (une bonne pratique qui n'est pas dans exemple n'est pas une bonne pratique)</para></listitem>
          <listitem><para>sauf cas très particulier, le nom et la location des fichiers (form, menu, script, screen) doivent utiliser les valeurs par défaut</para></listitem>
          <listitem><para>sauf cas très particulier, une portlet doit avoir un type (Screenlet, ScreenletList, Decorator ou Empty)</para></listitem>
          <listitem><para>les champs composant, sous-composant et webapp doivent être correctement renseignés (webapp vide ou non)</para></listitem>
          <listitem><para>mettre dans le bon composant la portlet, une portlet issue d'une form de projectmgr est un élément de WorkEffort s'il n'y a pas de spécificité project. 
                          Les uiLabels sont surchargeables par composant donc un titre spécifique n'est pas une bonne raison; 
                          un ou des drop-downs avec des contraintes (parentType = xxx, xxxType= , ...) peuvent facilement être rendus paramétrables.</para></listitem>

          <listitem><para>sauf cas très particulier, le titre de la screenlet doit utiliser un label existant, bien faire une recherche avant d'en créer un, et si création, le mettre dans le bon composant</para></listitem>
          <listitem><para>dans la mesure du possible, utiliser uniquement une form. Si possible, celle-ci hérite du formulaire HTML (form) standard, les champs de type lien (edit, remove) étant surchargés pour être des show-portlets, et un on-event-update-area est ajouté s'il y a un bouton submit</para></listitem>
          <listitem><para>les target pour l'update ou le create doivent utiliser un retour json, afin d'avoir un affichage des messages d'erreur ou de retour correct. </para></listitem>
          <listitem><para>les actions d'édition (dans la zone d'editArea) sont la plupart de temp des uri, pas des portlets (sauf usage en tant que tel par ailleurs); par souci d'homogénéité, il faut mettre screen, form dans les mêmes locations que les portlet les utilisant. De même, si possible faire un héritage de la form standard.</para></listitem>
          <listitem><para> pour l'instant, il n'y a pas consensus concernant le lieu du bouton "annuler" mais comme qui peut le plus, peut le moins, il faut mettre un bouton annuler dans les formulaires d'édition et un bouton dans le menu (en dernier à droite) qui fait un refresh de la portlet</para></listitem>
          <listitem><para> les uri json (et les uri d'action d'édition) sont à mettre dans le portlet-controller en respectant les bonnes pratiques OFBiz (request sans appel de service sur une ligne ...)</para></listitem>
          <listitem><para> dans la mesure du possible, utiliser un script (mini-lang) plutôt qu'un screen, si le script est une copie du pavé action du screen, mettre un commentaire ; le script n'a d'intérêt que s'il est utilisé plusieurs fois ou si le résultat est utilisé dans l'en-tête du screenlet (menu ou titre ), sinon autant le mettre dans le pavé action de la form.</para></listitem>
          <listitem><para>toute partie de code dupliqué (form, screen, menu, script, java) doit posséder un commentaire pour signaler l'origine de la copie et la justification de la copie (pensez à celui qui voudra supprimer la duplication)</para></listitem>
          <listitem><para>les addons nommé portlet-nomDunComposantStdOfbiz ont pour objectif d'être reversé à OFBiz, ils ne doivent donc contenir que des éléments standards</para></listitem>
          <listitem><para>portletWidget a pour objectif d'être reversé à OFBiz, pas genericPortlet ; il faut donc dans les addons portlet-nomDunComposantStdOfbiz migrer les portlets qui n'utiliseraient pas portletWidget</para></listitem>
          <listitem><para>pour tous les liens hyperlink vers d'autres pages (par exemple d'un autre composant), si possible migrer la target vers un showPortalPage et mettre en paramétrage de la nom de la portalPage, normalement ça doit être une page de type xxxxRecap. Bien entendu, paramétrer ou faire la form d'editAttribue.</para></listitem>
          <listitem><para>pour toutes les form d'editAttribue de portlet, le nom du champ ou son titre doivent être explicites, et si possible avoir un tooltips ; tout paramètre de portlet doit avoir une valeur par défaut (la portlet doit être utilisable sans avoir besoin de saisir une valeur)</para></listitem>
          <listitem><para>Il faut au minimum disposer des deux pages portails classiques ( xxxMgmt et xxxRecap), les mettre à jour à chaque ajout de portlet</para></listitem>
          <listitem><para>Dans la mesure du possible, il faut mettre des icônes à la place de libellé. Pour cela, il faut :
             <itemizedlist>
              <listitem><para>chercher la bonne icône dans la page "Liste des icônes", et donc trouver son nom logique</para></listitem>
              <listitem><para>exprimer l'image-location en utilisant la map iconsPurpose </para></listitem>
              <listitem><para>si le Tooltips par défaut (celui visible dans la page Liste des portlet) est suffisamment clair pour votre usage, utilisez-le via les labels  IconsTooltips_, sinon personnalisez correctement l'image-title en rédigeant un nouveau Tooltips mieux adapté</para></listitem>
             </itemizedlist></para></listitem>
        </orderedlist>
      </para>
    </section>

    <section>
      <title>Suite de l'aide</title>
      <para>
        Pour avoir la suite (les types de page portail, les types de portlet), cliquez sur le bouton "Index" et regardez l'arborescence de la rubrique Exemple / Développement.
      </para>
    </section>
</section>
